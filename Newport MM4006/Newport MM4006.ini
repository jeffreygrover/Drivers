# Instrument driver configuration file.

[General settings]

# The name is shown in all the configuration windows
name: Newport MM4006 Motion Controller

# The version string should be updated whenever changes are made to this config file
version: 1.0

# Name of folder containing the code defining a custom driver. Do not define this item
# or leave it blank for any standard driver based on the built-in VISA interface.
driver_path: Newport MM4006

[Model and options]
# The option section allow instruments with different options to use the same driver

# List of models supported by this driver
model_str_1: MM4006

# Check instrument model id at startup (True or False). Default is False
check_model: True

check_option: False

option_str_1: ch1unknown
option_str_2: ch2unknown
option_str_3: ch3unknown
option_str_4: ch4unknown
option_str_5: ch5unknown
option_str_6: ch6unknown
option_str_7: ch7unknown
option_str_8: ch8unknown
option_str_9: ch1mm
option_str_10: ch2mm
option_str_11: ch3mm
option_str_12: ch4mm
option_str_13: ch5mm
option_str_14: ch6mm
option_str_15: ch7mm
option_str_16: ch8mm
option_str_17: ch1deg
option_str_18: ch2deg
option_str_19: ch3deg
option_str_20: ch4deg
option_str_21: ch5deg
option_str_22: ch6deg
option_str_23: ch7deg
option_str_24: ch8deg

# Valid model strings returned by the instrument. Default value = model_str

# General VISA settings for the instrument.
[VISA settings]

# Enable or disable communication over the VISA protocol (True or False)
# If False, the driver will not perform any operations (unless there is a custom driver).
use_visa = True

# Reset the interface (not the instrument) at startup (True or False).  Default is False
reset: False

# Time (in seconds) before the timing out while waiting for an instrument response. Default is 5
timeout: 5

# Query instrument errors (True or False).  If True, every command sent to the device will
# be followed by an error query.  This is useful when testing new setups, but may degrade
# performance by slowing down the instrument communication. 
query_instr_errors: False 

# Bit mask for checking status byte errors (default is 255, include all errors)
# The bits signal the following errors:
# 0: Operation
# 1: Request control
# 2: Query error
# 3: Device error
# 4: Execution error
# 5: Command error
# 6: User request
# 7: Power on
error_bit_mask: 255

# SCPI string to be used when querying for instrument error messages
error_cmd: 

# Initialization commands are sent to the instrument when starting the driver
# *RST will reset the device, *CLS clears the interface
init:

# Boolean string values (used for sending True/False to instrument), default is 1 and 0
#str_true: ON
#str_false: OFF

# Final commands sent to the instrument when closing the driver
final: 


# Define quantities in sections. The section name should be the same as the "name" value
# The following keywords are allowed:
#   name:          Quantity name
#   unit:          Quantity unit
#   enabled:	   Determines wether the control is enabled from start.  Default is True	
#   datatype:      The data type should be one of DOUBLE, BOOLEAN, COMBO, STRING, PATH or BUTTON
#   def_value:     Default value
#   low_lim:       Lowest allowable value.  Defaults to -INF
#   high_lim:      Highest allowable values.  Defaults to +INF
#   combo_def_1:   First option in a pull-down combo box. Only used when datatype=COMBO
#   combo_def_2:   Second option in a pull-down combo box. Only used when datatype=COMBO
#   ...
#   combo_def_n:   nth option in a pull-down combo box. Only used when datatype=COMBO
#   group:         Name of the group where the control belongs.
#   state_quant:   Quantity that determines this control's visibility
#   state_value_1: Value of "state_quant" for which the control is visible
#   state_value_2: Value of "state_quant" for which the control is visible
#   ...
#   state_value_n: Value of "state_quant" for which the control is visible
#   permission:    Sets read/writability, options are BOTH, READ, WRITE or NONE. Default is BOTH 
#   set_cmd:       Command used to send data to the instrument. Put <*> where the value should appear.
#   sweep_cmd:     Command used to sweep data. Use <s> for sweep rate, and <*> for the value.
#   get_cmd:       Command used to get the data from the instrument. Default is set_cmd?


[Ch1Name]
datatype: STRING
group: Ch1
permission: READ
get_cmd: 1SF?

[Ch1Value]
datatype: DOUBLE
group: Ch1
get_cmd: 1TP
set_cmd: 1PA<*>
stop_cmd: 1ST
option_value_1: ch1unknown

[Ch1Position]
datatype: DOUBLE
group: Ch1
get_cmd: 1TP
set_cmd: 1PA<*>
stop_cmd: 1ST
unit: m
option_value_1: ch1mm

[Ch1Rotation]
datatype: DOUBLE
group: Ch1
get_cmd: 1TP
set_cmd: 1PA<*>
stop_cmd: 1ST
unit: deg
option_value_1: ch1deg

[Ch2Name]
datatype: STRING
group: Ch2
permission: READ
get_cmd: 2SF?

[Ch2Value]
datatype: DOUBLE
group: Ch2
get_cmd: 2TP
set_cmd: 2PA<*>
stop_cmd: 2ST
option_value_1: ch2unknown

[Ch2Position]
datatype: DOUBLE
group: Ch2
get_cmd: 2TP
set_cmd: 2PA<*>
stop_cmd: 2ST
unit: m
option_value_1: ch2mm

[Ch2Rotation]
datatype: DOUBLE
group: Ch2
get_cmd: 2TP
set_cmd: 2PA<*>
stop_cmd: 2ST
unit: deg
option_value_1: ch2deg

[Ch3Name]
datatype: STRING
group: Ch3
permission: READ
get_cmd: 3SF?

[Ch3Value]
datatype: DOUBLE
group: Ch3
get_cmd: 3TP
set_cmd: 3PA<*>
stop_cmd: 3ST
option_value_1: ch3unknown

[Ch3Position]
datatype: DOUBLE
group: Ch3
get_cmd: 3TP
set_cmd: 3PA<*>
stop_cmd: 3ST
unit: m
option_value_1: ch3mm

[Ch3Rotation]
datatype: DOUBLE
group: Ch3
get_cmd: 3TP
set_cmd: 3PA<*>
stop_cmd: 3ST
unit: deg
option_value_1: ch3deg

[Ch4Name]
datatype: STRING
group: Ch4
permission: READ
get_cmd: 4SF?

[Ch4Value]
datatype: DOUBLE
group: Ch4
get_cmd: 4TP
set_cmd: 4PA<*>
stop_cmd: 4ST
option_value_1: ch4unknown

[Ch4Position]
datatype: DOUBLE
group: Ch4
get_cmd: 4TP
set_cmd: 4PA<*>
stop_cmd: 4ST
unit: m
option_value_1: ch4mm

[Ch4Rotation]
datatype: DOUBLE
group: Ch4
get_cmd: 4TP
set_cmd: 4PA<*>
stop_cmd: 4ST
unit: deg
option_value_1: ch4deg

[Ch5Name]
datatype: STRING
group: Ch5
permission: READ
get_cmd: 5SF?

[Ch5Value]
datatype: DOUBLE
group: Ch5
get_cmd: 5TP
set_cmd: 5PA<*>
stop_cmd: 5ST
option_value_1: ch5unknown

[Ch5Position]
datatype: DOUBLE
group: Ch5
get_cmd: 5TP
set_cmd: 5PA<*>
stop_cmd: 5ST
unit: m
option_value_1: ch5mm

[Ch5Rotation]
datatype: DOUBLE
group: Ch5
get_cmd: 5TP
set_cmd: 5PA<*>
stop_cmd: 5ST
unit: deg
option_value_1: ch5deg

[Ch6Name]
datatype: STRING
group: Ch6
permission: READ
get_cmd: 6SF?

[Ch6Value]
datatype: DOUBLE
group: Ch6
get_cmd: 6TP
set_cmd: 6PA<*>
stop_cmd: 6ST
option_value_1: ch6unknown

[Ch6Position]
datatype: DOUBLE
group: Ch6
get_cmd: 6TP
set_cmd: 6PA<*>
stop_cmd: 6ST
unit: m
option_value_1: ch6mm

[Ch6Rotation]
datatype: DOUBLE
group: Ch6
get_cmd: 6TP
set_cmd: 6PA<*>
stop_cmd: 6ST
unit: deg
option_value_1: ch6deg

[Ch7Name]
datatype: STRING
group: Ch7
permission: READ
get_cmd: 7SF?

[Ch7Value]
datatype: DOUBLE
group: Ch7
get_cmd: 7TP
set_cmd: 7PA<*>
stop_cmd: 7ST
option_value_1: ch7unknown

[Ch7Position]
datatype: DOUBLE
group: Ch7
get_cmd: 7TP
set_cmd: 7PA<*>
stop_cmd: 7ST
unit: m
option_value_1: ch7mm

[Ch7Rotation]
datatype: DOUBLE
group: Ch7
get_cmd: 7TP
set_cmd: 7PA<*>
stop_cmd: 7ST
unit: deg
option_value_1: ch7deg

[Ch8Name]
datatype: STRING
group: Ch8
permission: READ
get_cmd: 8SF?

[Ch8Value]
datatype: DOUBLE
group: Ch8
get_cmd: 8TP
set_cmd: 8PA<*>
stop_cmd: 8ST
option_value_1: ch8unknown

[Ch8Position]
datatype: DOUBLE
group: Ch8
get_cmd: 8TP
set_cmd: 8PA<*>
stop_cmd: 8ST
unit: m
option_value_1: ch8mm

[Ch8Rotation]
datatype: DOUBLE
group: Ch8
get_cmd: 8TP
set_cmd: 8PA<*>
stop_cmd: 8ST
unit: deg
option_value_1: ch8deg

