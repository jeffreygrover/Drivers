# Instrument driver configuration file.

[General settings]

# The name is shown in all the configuration windows
name: Keysight_MXA_SA_MODE

# The version string should be updated whenever changes are made to this config file
version: 1.1

# Name of folder containing the code defining a custom driver. Do not define this item
# or leave it blank for any standard driver based on the built-in VISA interface.
driver_path: Keysight_MXA_SA_MODE

# General VISA settings for the instrument.
[VISA settings]

# Enable or disable communication over the VISA protocol (True or False)
# If False, the driver will not perform any operations (unless there is a custom driver).
use_visa = True

# Reset the interface (not the instrument) at startup (True or False).  Default is False
reset: True

# Time (in seconds) before the timing out while waiting for an instrument response. Default is 5
timeout: 10

# Query instrument errors (True or False).  If True, every command sent to the device will
# be followed by an error query.  This is useful when testing new setups, but may degrade
# performance by slowing down the instrument communication. 
query_instr_errors: False 

# Bit mask for checking status byte errors (default is 255, include all errors)
# The bits signal the following errors:
# 0: Operation
# 1: Request control
# 2: Query error
# 3: Device error
# 4: Execution error
# 5: Command error
# 6: User request
# 7: Power on
error_bit_mask: 255

# SCPI string to be used when querying for instrument error messages
error_cmd: :SYST:ERR?

# Initialization commands are sent to the instrument when starting the driver
# *RST will reset the device, *CLS clears the interface, :BAND:VID:AUTO 1
init: :INIT:CONT ON;:FORM:BORD NORM

# Boolean string values (used for sending True/False to instrument), default is 1 and 0
#str_true: ON
#str_false: OFF

# Final commands sent to the instrument when closing the driver
final: 


[Model and options]
# The option section allow instruments with different options to use the same driver

# List of models supported by this driver
model_str_1: N90xx

# Check instrument model id at startup (True or False). Default is False
check_model: True

# If check_model is set to True, define command for getting the model (default is *IDN?)
#model_cmd: *IDN?

# Valid model strings returned by the instrument. Default value = model_str
model_id_1: Keysight Technologies,N90


# Define quantities in sections. This list is a selection of allowed keywords,
# see the manual for a full list of options
#   datatype:      The datatype should be one of DOUBLE, BOOLEAN, COMBO,
#                  STRING, COMPLEX, VECTOR, VECTOR_COMPLEX, PATH or BUTTON.
#   unit:          Quantity unit
#   set_cmd:       Command used to send data to the instrument. Put <*> where the value should appear.
#   get_cmd:       Command used to get the data from the instrument. Default is set_cmd?
#   def_value:     Default value
#   low_lim:       Lowest allowable value.  Defaults to -INF
#   high_lim:      Highest allowable values.  Defaults to +INF
#   combo_def_1:   First option in a pull-down combo box. Only used when datatype=COMBO
#   combo_def_2:   Second option in a pull-down combo box. Only used when datatype=COMBO
#   ...
#   combo_def_n:   nth option in a pull-down combo box. Only used when datatype=COMBO
#   state_quant:   Quantity that determines this control's visibility
#   state_value_1: Value of "state_quant" for which the control is visible
#   state_value_2: Value of "state_quant" for which the control is visible
#   ...
#   state_value_n: Value of "state_quant" for which the control is visible
#   permission:    Sets read/writability, options are BOTH, READ, WRITE or NONE. Default is BOTH 
#   group:         Name of the group where the control belongs.
#   section:       Name of the section where the control belongs.

#define Acquisition mode.  There are a bunch of dependency issues if both are selected.

#define all settings common to both modes here.

[Acquisition Mode]
datatype: COMBO
def_value: Signal Analyzer
combo_def_1: Signal Analyzer
combo_def_2: IQ Basic
cmd_def_1: SA
cmd_def_2: BASIC
set_cmd: :INST:SEL
get_cmd: :INST:SEL?
show_in_measurement_dlg: True

[Measurement Type]
datatype: COMBO
def_value: Complex Spectrum
combo_def_1: Complex Spectrum
combo_def_2: Complex Waveform
state_quant: Acquisition Mode
state_value_1: IQ Basic
show_in_measurement_dlg: True

[External Freq Ref]
datatype: COMBO
def_value: Internal
combo_def_1: Internal
combo_def_2: External
cmd_def_1: INT
cmd_def_2: EXT
set_cmd: :SENS:ROSC:SOUR:TYPE
get_cmd: :SENS:ROSC:SOUR:TYPE?
group: Sync
show_in_measurement_dlg: True

[Trigger Source]
datatype: COMBO
def_value: Free Run
combo_def_1: Free Run
combo_def_2: External 1
cmd_def_1: IMM
cmd_def_2: EXT1
set_cmd: :TRIG:SOUR
get_cmd: :TRIG:SOUR?
state_quant: Acquisition Mode
state_value_1: Signal Analyzer
section: Trigger
show_in_measurement_dlg: True

[Trigger Source CW]
datatype: COMBO
def_value: Free Run
combo_def_1: Free Run
combo_def_2: External 1
cmd_def_1: IMM
cmd_def_2: EXT1
set_cmd: :TRIG:WAV:SOUR
get_cmd: :TRIG:WAV:SOUR?
state_quant: Measurement Type
state_value_1: Complex Waveform
section: Trigger
show_in_measurement_dlg: True

[Trigger Source CS]
datatype: COMBO
def_value: Free Run
combo_def_1: Free Run
combo_def_2: External 1
cmd_def_1: IMM
cmd_def_2: EXT1
set_cmd: :TRIG:SPEC:SOUR
get_cmd: :TRIG:SPEC:SOUR?
state_quant: Measurement Type
state_value_1: Complex Spectrum
section: Trigger
show_in_measurement_dlg: True

[Trigger Level External 1]
datatype: DOUBLE
def_value: 1
low_lim: -5
high_lim: 5
unit: V
set_cmd: :TRIG:EXT1:LEV <*>V
get_cmd: :TRIG:EXT1:LEV?
state_quant: Trigger Source
state_value_1: External 1
section: Trigger
show_in_measurement_dlg: True

[Trigger Slope External 1]
datatype: COMBO
def_value: positive
combo_def_1: positive
combo_def_2: negative
cmd_def_1: POS
cmd_def_2: NEG
set_cmd: :TRIG:EXT1:SLOP
get_cmd: :TRIG:EXT1:SLOP?
state_quant: Trigger Source
state_value_1: External 1
section: Trigger
show_in_measurement_dlg: True

[Trigger Delay External 1 State]
datatype: COMBO
def_value: OFF
combo_def_1: OFF
combo_def_2: ON
cmd_def_1: 0
cmd_def_2: 1
set_cmd: :TRIG:EXT1:DEL:STAT
get_cmd: :TRIG:EXT1:DEL:STAT?
state_quant: Trigger Source
state_value_1: External 1
section: Trigger
show_in_measurement_dlg: True

[Trigger Delay External 1]
datatype: DOUBLE
def_value: 0
low_lim: -1.5E-3
high_lim: 5E-3
unit: seconds
set_cmd: :TRIG:EXT1:DEL <*>s
get_cmd: :TRIG:EXT1:DEL?
state_quant: Trigger Delay External 1 State
state_value_1: ON
section: Trigger
show_in_measurement_dlg: True

[Trigger Level External 1 CW]
datatype: DOUBLE
def_value: 1
low_lim: -5
high_lim: 5
unit: V
set_cmd: :TRIG:EXT1:LEV <*>V
get_cmd: :TRIG:EXT1:LEV?
state_quant: Trigger Source CW
state_value_1: External 1
section: Trigger
show_in_measurement_dlg: True

[Trigger Slope External 1 CW]
datatype: COMBO
def_value: positive
combo_def_1: positive
combo_def_2: negative
cmd_def_1: POS
cmd_def_2: NEG
set_cmd: :TRIG:EXT1:SLOP
get_cmd: :TRIG:EXT1:SLOP?
state_quant: Trigger Source CW
state_value_1: External 1
section: Trigger
show_in_measurement_dlg: True

[Trigger Delay External 1 State CW]
datatype: COMBO
def_value: OFF
combo_def_1: OFF
combo_def_2: ON
cmd_def_1: 0
cmd_def_2: 1
set_cmd: :TRIG:EXT1:DEL:STAT
get_cmd: :TRIG:EXT1:DEL:STAT?
state_quant: Trigger Source CW
state_value_1: External 1
section: Trigger
show_in_measurement_dlg: True

[Trigger Delay External 1 CW]
datatype: DOUBLE
def_value: 0
low_lim: -1.5E-3
high_lim: 5E-3
unit: seconds
set_cmd: :TRIG:EXT1:DEL <*>s
get_cmd: :TRIG:EXT1:DEL?
state_quant: Trigger Delay External 1 State CW
state_value_1: ON
section: Trigger
show_in_measurement_dlg: True

#define Signal Analyzer settings

[Range type]
datatype: COMBO
def_value: Center - Span
combo_def_1: Center - Span
combo_def_2: Start - Stop
combo_def_3: Zero-span mode
state_quant: Acquisition Mode
state_value_1: Signal Analyzer
section: Signal Analyzer
group: Frequency Domain
show_in_measurement_dlg: True

[Trigger Delay Compensation]
datatype: COMBO
def_value: ON
combo_def_1: ON
combo_def_2: OFF
cmd_def_1: 1
cmd_def_2: 0
set_cmd: :TRIG:EXT1:DEL:COMP
get_cmd: :TRIG:EXT1:DEL:COMP?
state_quant: Trigger Delay External 1 State
state_value_1: ON
section: Trigger
show_in_measurement_dlg: True

[Trigger Delay Compensation CW]
datatype: COMBO
def_value: ON
combo_def_1: ON
combo_def_2: OFF
cmd_def_1: 1
cmd_def_2: 0
set_cmd: :TRIG:EXT1:DEL:COMP
get_cmd: :TRIG:EXT1:DEL:COMP?
state_quant: Trigger Delay External 1 State CW
state_value_1: ON
section: Trigger
show_in_measurement_dlg: True

[Start frequency]
datatype: DOUBLE
def_value: 4E9
unit: Hz
set_cmd: :SENS:FREQ:STAR
state_quant: Range type
state_value_1: Start - Stop
section: Signal Analyzer
group: Frequency Domain
show_in_measurement_dlg: True

[Stop frequency]
datatype: DOUBLE
def_value: 12E9
unit: Hz
set_cmd: :SENS:FREQ:STOP
state_quant: Range type
state_value_1: Start - Stop
section: Signal Analyzer
group: Frequency Domain
show_in_measurement_dlg: True

[Center frequency]
datatype: DOUBLE
def_value: 8E9
unit: Hz
set_cmd: :SENS:FREQ:CENT
state_quant: Range type
state_value_1: Center - Span
state_value_2: Zero-span mode
section: Signal Analyzer
group: Frequency Domain
show_in_measurement_dlg: True

[Span]
datatype: DOUBLE
def_value: 8E9
unit: Hz
low_lim: 0
high_lim: 26.5E9
set_cmd: :FREQ:SPAN
state_quant: Range type
state_value_1: Center - Span
section: Signal Analyzer
group: Frequency Domain
show_in_measurement_dlg: True

[Sweep Time]
datatype: DOUBLE
def_value: 1E-3
unit: Hz
low_lim: 1E-6
high_lim: 6E3
set_cmd: :SWE:TIME
get_cmd: :SWE:TIME?
state_quant: Range type
state_value_1: Zero-span mode
section: Signal Analyzer
group: Frequency Domain
show_in_measurement_dlg: True

[Y Scale type]
datatype: COMBO
def_value: Logarithmic
combo_def_1: Logarithmic
combo_def_2: Linear
cmd_def_1: LOG
cmd_def_2: LIN
set_cmd: :DISP:WIND:TRAC:Y:SPAC
get_cmd: :DISP:WIND:TRAC:Y:SPAC?
state_quant: Acquisition Mode
state_value_1: Signal Analyzer
section: Signal Analyzer
group: Acquisition
show_in_measurement_dlg: True

[# of points]
datatype: DOUBLE
def_value: 401
set_cmd: :SENS:SWE:POIN
state_quant: Range type
state_value_1: Center - Span
state_value_2: Start - Stop
section: Signal Analyzer
group: Frequency Domain
show_in_measurement_dlg: True

[Average]
datatype: BOOLEAN
def_value: False
set_cmd: :SENS:AVER
state_quant: Acquisition Mode
state_value_1: Signal Analyzer
section: Signal Analyzer
group: Acquisition
show_in_measurement_dlg: True

[# of averages]
datatype: DOUBLE
def_value: 10
low_lim: 1
high_lim: 65536
set_cmd: :SENS:AVER:COUN
state_quant: Average
state_value_1: True
section: Signal Analyzer
group: Acquisition
show_in_measurement_dlg: True

[Wait for new trace]
datatype: BOOLEAN
def_value: False
section: Trigger
show_in_measurement_dlg: True

#only works in SA mode


#Trigger information p. 502 of the users manual.  Gate menu 2257

#does not work????



# the below only work in IQ mode

# [RF Input Trigger Source]
# datatype: COMBO
# def_value: External 1
# combo_def_1: External 1
# combo_def_2: External 2
# combo_def_3: Free Run
# cmd_def_1: EXT1
# cmd_def_2: EXT2
# cmd_def_3: IMM
# set_cmd: :TRIG:ACP:RF:SOUR
# get_cmd: :TRIG:ACP:RF:SOUR?
# group: Meas Setup

[Signal]
x_name: Frequency
x_unit: Hz
datatype: VECTOR
permission: READ
state_quant: Range type
state_value_1: Center - Span
state_value_2: Start - Stop
show_in_measurement_dlg: True

[Signal - Zero span]
datatype: DOUBLE
permission: READ
state_quant: Range type
state_value_1: Zero-span mode
show_in_measurement_dlg: True

[Center frequency CW]
datatype: DOUBLE
def_value: 100E6
unit: Hz
set_cmd: :SENS:FREQ:CENT
get_cmd: :SENS:FREQ:CENT?
section: IQ Basic
state_quant: Measurement Type
state_value_1: Complex Waveform
show_in_measurement_dlg: True

[Measurement Time CW]
datatype: DOUBLE
def_value: 1E-6
low_lim: 1E-6
high_lim: 3200
unit: seconds
set_cmd: :WAV:SWE:TIME <*>s
get_cmd: :WAV:SWE:TIME?
state_quant: Measurement Type
state_value_1: Complex Waveform
section: IQ Basic
group: Acquisition
show_in_measurement_dlg: True

[Sample Rate CW]
datatype: DOUBLE
def_value: 50E6
low_lim: 12.5
high_lim: 156.25E6
unit: Hz
set_cmd: :WAV:SRAT <*>Hz
get_cmd: :WAV:SRAT?
state_quant: Measurement Type
state_value_1: Complex Waveform
section: IQ Basic
group: Acquisition
show_in_measurement_dlg: True

[Average CW]
datatype: BOOLEAN
def_value: False
set_cmd: :WAV:AVER:STAT
get_cmd: :WAV:AVER:STAT?
state_quant: Measurement Type
state_value_1: Complex Waveform
section: IQ Basic
group: Acquisition
show_in_measurement_dlg: True

[# of averages CW]
datatype: DOUBLE
def_value: 10
low_lim: 1
high_lim: 65536
set_cmd: :WAV:AVER:COUN
get_cmd: :WAV:AVER:COUN?
state_quant: Average CW
state_value_1: True
section: IQ Basic
group: Acquisition
show_in_measurement_dlg: True

[Center frequency CS]
datatype: DOUBLE
def_value: 100E6
unit: Hz
set_cmd: :SENS:FREQ:CENT
get_cmd: :SENS:FREQ:CENT?
section: IQ Basic
state_quant: Measurement Type
state_value_1: Complex Spectrum
show_in_measurement_dlg: True

[Resolution Bandwidth AUTO?]
datatype: COMBO
def_value: ON
combo_def_1: ON
combo_def_2: OFF
cmd_def_1: 1
cmd_def_2: 0
set_cmd: :SPEC:BAND:AUTO
get_cmd: :SPEC:BAND:AUTO?
state_quant: Measurement Type
state_value_1: Complex Spectrum
section: IQ Basic
group: Acquisition
show_in_measurement_dlg: True

[Span CS]
datatype: DOUBLE
def_value: 8E6
low_lim: 10
high_lim: 125E6
unit: Hz
set_cmd: :SPEC:FREQ:SPAN
get_cmd: :SPEC:FREQ:SPAN?
state_quant: Measurement Type
state_value_1: Complex Spectrum
section: IQ Basic
group: Acquisition
show_in_measurement_dlg: True

[Resolution Bandwidth CS]
datatype: DOUBLE
def_value: 160E3
low_lim: 0.1
high_lim: 3E6
unit: Hz
set_cmd: :SPEC:BAND
get_cmd: :SPEC:BAND?
state_quant: Resolution Bandwidth AUTO?
state_value_1: OFF
section: IQ Basic
group: Acquisition
show_in_measurement_dlg: True

[Average CS]
datatype: BOOLEAN
def_value: False
set_cmd: :SPEC:AVER:STAT
get_cmd: :SPEC:AVER:STAT?
state_quant: Measurement Type
state_value_1: Complex Spectrum
section: IQ Basic
group: Acquisition
show_in_measurement_dlg: True

[# of averages CS]
datatype: DOUBLE
def_value: 10
low_lim: 1
high_lim: 65536
set_cmd: :SPEC:AVER:COUN
get_cmd: :SPEC:AVER:COUN?
state_quant: Average CS
state_value_1: True
section: IQ Basic
group: Acquisition
show_in_measurement_dlg: True

[Trace type CS]
datatype: COMBO
def_value: unprocessed IQ trace data (V)
combo_def_1: unprocessed IQ trace data (V)
combo_def_2: log-mag vs. time
combo_def_3: processed I/Q trace vs. time
combo_def_4: log-mag vs. Freq.
combo_def_5: avged log-mag vs. Time
combo_def_6: avged log-mag vs. Freq.
combo_def_7: shape of FFT window
combo_def_8: phase of FFT vs. Freq.
combo_def_9: linear spectrum (V RMS)
combo_def_10: avged linear spectrum (V RMS)
state_quant: Measurement Type
state_value_1: Complex Spectrum
show_in_measurement_dlg: True

[Trace type CW]
datatype: COMBO
def_value: unprocessed IQ trace data (V)
combo_def_1: unprocessed IQ trace data (V)
combo_def_2: log-mag vs. time
state_quant: Measurement Type
state_value_1: Complex Waveform
show_in_measurement_dlg: True

[Signal - CW]
x_name: Time
x_unit: seconds
datatype: VECTOR_COMPLEX
permission: READ
state_quant: Measurement Type
state_value_1: Complex Waveform
show_in_measurement_dlg: True

[Signal - CS]
x_name: Frequency
x_unit: Hz
datatype: VECTOR_COMPLEX
permission: READ
state_quant: Measurement Type
state_value_1: Complex Spectrum
show_in_measurement_dlg: True
